

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Wed Aug 05 10:46:14 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,merge=1,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.20
    15                           ; Generated 12/02/2020 GMT
    16                           ; 
    17                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0094                     	;# 
    96  0098                     	;# 
    97  0099                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  010C                     	;# 
   103  010D                     	;# 
   104  010E                     	;# 
   105  010F                     	;# 
   106  018C                     	;# 
   107  018D                     	;# 
   108  0000                     	;# 
   109  0001                     	;# 
   110  0002                     	;# 
   111  0003                     	;# 
   112  0004                     	;# 
   113  0005                     	;# 
   114  0006                     	;# 
   115  0007                     	;# 
   116  0008                     	;# 
   117  0009                     	;# 
   118  000A                     	;# 
   119  000B                     	;# 
   120  000C                     	;# 
   121  000D                     	;# 
   122  000E                     	;# 
   123  000E                     	;# 
   124  000F                     	;# 
   125  0010                     	;# 
   126  0011                     	;# 
   127  0012                     	;# 
   128  0013                     	;# 
   129  0014                     	;# 
   130  0015                     	;# 
   131  0015                     	;# 
   132  0016                     	;# 
   133  0017                     	;# 
   134  0018                     	;# 
   135  0019                     	;# 
   136  001A                     	;# 
   137  001B                     	;# 
   138  001B                     	;# 
   139  001C                     	;# 
   140  001D                     	;# 
   141  001E                     	;# 
   142  001F                     	;# 
   143  0081                     	;# 
   144  0085                     	;# 
   145  0086                     	;# 
   146  0087                     	;# 
   147  0088                     	;# 
   148  0089                     	;# 
   149  008C                     	;# 
   150  008D                     	;# 
   151  008E                     	;# 
   152  0091                     	;# 
   153  0092                     	;# 
   154  0093                     	;# 
   155  0094                     	;# 
   156  0098                     	;# 
   157  0099                     	;# 
   158  009C                     	;# 
   159  009D                     	;# 
   160  009E                     	;# 
   161  009F                     	;# 
   162  010C                     	;# 
   163  010D                     	;# 
   164  010E                     	;# 
   165  010F                     	;# 
   166  018C                     	;# 
   167  018D                     	;# 
   168  0000                     	;# 
   169  0001                     	;# 
   170  0002                     	;# 
   171  0003                     	;# 
   172  0004                     	;# 
   173  0005                     	;# 
   174  0006                     	;# 
   175  0007                     	;# 
   176  0008                     	;# 
   177  0009                     	;# 
   178  000A                     	;# 
   179  000B                     	;# 
   180  000C                     	;# 
   181  000D                     	;# 
   182  000E                     	;# 
   183  000E                     	;# 
   184  000F                     	;# 
   185  0010                     	;# 
   186  0011                     	;# 
   187  0012                     	;# 
   188  0013                     	;# 
   189  0014                     	;# 
   190  0015                     	;# 
   191  0015                     	;# 
   192  0016                     	;# 
   193  0017                     	;# 
   194  0018                     	;# 
   195  0019                     	;# 
   196  001A                     	;# 
   197  001B                     	;# 
   198  001B                     	;# 
   199  001C                     	;# 
   200  001D                     	;# 
   201  001E                     	;# 
   202  001F                     	;# 
   203  0081                     	;# 
   204  0085                     	;# 
   205  0086                     	;# 
   206  0087                     	;# 
   207  0088                     	;# 
   208  0089                     	;# 
   209  008C                     	;# 
   210  008D                     	;# 
   211  008E                     	;# 
   212  0091                     	;# 
   213  0092                     	;# 
   214  0093                     	;# 
   215  0094                     	;# 
   216  0098                     	;# 
   217  0099                     	;# 
   218  009C                     	;# 
   219  009D                     	;# 
   220  009E                     	;# 
   221  009F                     	;# 
   222  010C                     	;# 
   223  010D                     	;# 
   224  010E                     	;# 
   225  010F                     	;# 
   226  018C                     	;# 
   227  018D                     	;# 
   228  0006                     _PORTB	set	6
   229  0037                     _RB7	set	55
   230  0036                     _RB6	set	54
   231  0035                     _RB5	set	53
   232  0034                     _RB4	set	52
   233  0033                     _RB3	set	51
   234  0032                     _RB2	set	50
   235  0031                     _RB1	set	49
   236  0030                     _RB0	set	48
   237  0043                     _RD3	set	67
   238  0042                     _RD2	set	66
   239  0047                     _RD7	set	71
   240  0046                     _RD6	set	70
   241  0045                     _RD5	set	69
   242  0044                     _RD4	set	68
   243  0081                     _OPTION_REG	set	129
   244  0086                     _TRISB	set	134
   245  0088                     _TRISD	set	136
   246                           
   247                           	psect	cinit
   248  07FC                     start_initialization:	
   249                           ; #config settings
   250                           
   251  07FC                     __initialization:
   252  07FC                     end_of_initialization:	
   253                           ;End of C runtime variable initialization code
   254                           
   255  07FC                     __end_of__initialization:
   256  07FC  0183               	clrf	3
   257  07FD  120A  118A  2DC0   	ljmp	_main	;jump to C main() function
   258                           
   259                           	psect	cstackCOMMON
   260  0070                     __pcstackCOMMON:
   261  0070                     ?_switch_press_scan:
   262  0070                     ?_Lcd_SetBit:	
   263                           ; 1 bytes @ 0x0
   264                           
   265  0070                     ??_Lcd_SetBit:	
   266                           ; 1 bytes @ 0x0
   267                           
   268  0070                     ?_Lcd_Print_Char:	
   269                           ; 1 bytes @ 0x0
   270                           
   271  0070                     ?_keypad_scanner:	
   272                           ; 1 bytes @ 0x0
   273                           
   274  0070                     ??_keypad_scanner:	
   275                           ; 1 bytes @ 0x0
   276                           
   277  0070                     ?_main:	
   278                           ; 1 bytes @ 0x0
   279                           
   280  0070                     Lcd_SetBit@data_bit:	
   281                           ; 2 bytes @ 0x0
   282                           
   283                           
   284                           ; 1 bytes @ 0x0
   285  0070                     	ds	1
   286  0071                     ??_Lcd_Print_Char:
   287                           
   288                           ; 1 bytes @ 0x1
   289  0071                     	ds	1
   290  0072                     Lcd_Print_Char@Lower_Nibble:
   291                           
   292                           ; 1 bytes @ 0x2
   293  0072                     	ds	1
   294  0073                     ??_switch_press_scan:
   295  0073                     Lcd_Print_Char@Upper_Nibble:	
   296                           ; 1 bytes @ 0x3
   297                           
   298  0073                     switch_press_scan@key:	
   299                           ; 1 bytes @ 0x3
   300                           
   301                           
   302                           ; 1 bytes @ 0x3
   303  0073                     	ds	1
   304  0074                     Lcd_Print_Char@i:
   305                           
   306                           ; 2 bytes @ 0x4
   307  0074                     	ds	2
   308  0076                     Lcd_Print_Char@i_67:
   309                           
   310                           ; 2 bytes @ 0x6
   311  0076                     	ds	2
   312  0078                     Lcd_Print_Char@data:
   313                           
   314                           ; 1 bytes @ 0x8
   315  0078                     	ds	1
   316  0079                     ??_main:
   317  0079                     main@key:	
   318                           ; 1 bytes @ 0x9
   319                           
   320                           
   321                           ; 1 bytes @ 0x9
   322  0079                     	ds	1
   323                           
   324                           	psect	maintext
   325  05C0                     __pmaintext:	
   326 ;;
   327 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   328 ;;
   329 ;; *************** function _main *****************
   330 ;; Defined at:
   331 ;;		line 128 in file "main.c"
   332 ;; Parameters:    Size  Location     Type
   333 ;;		None
   334 ;; Auto vars:     Size  Location     Type
   335 ;;  key             1    9[COMMON] unsigned char 
   336 ;; Return value:  Size  Location     Type
   337 ;;                  2   70[None  ] int 
   338 ;; Registers used:
   339 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   340 ;; Tracked objects:
   341 ;;		On entry : B00/0
   342 ;;		On exit  : 0/0
   343 ;;		Unchanged: 0/0
   344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   345 ;;      Params:         0       0       0       0       0
   346 ;;      Locals:         1       0       0       0       0
   347 ;;      Temps:          0       0       0       0       0
   348 ;;      Totals:         1       0       0       0       0
   349 ;;Total ram usage:        1 bytes
   350 ;; Hardware stack levels required when called:    2
   351 ;; This function calls:
   352 ;;		_Lcd_Print_Char
   353 ;;		_switch_press_scan
   354 ;; This function is called by:
   355 ;;		Startup code after reset
   356 ;; This function uses a non-reentrant model
   357 ;;
   358                           
   359                           
   360                           ;psect for function _main
   361  05C0                     _main:
   362  05C0                     l1006:	
   363                           ;incstack = 0
   364                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   365                           
   366  05C0                     l1008:
   367                           
   368                           ;main.c: 131:     {;main.c: 132:         key = switch_press_scan();
   369  05C0  120A  118A  25D2  120A  118A  	fcall	_switch_press_scan
   370  05C5  00FF               	movwf	btemp+1
   371  05C6  087F               	movf	btemp+1,w
   372  05C7  00F9               	movwf	main@key
   373  05C8                     l1010:
   374                           
   375                           ;main.c: 133:         Lcd_Print_Char(key);
   376  05C8  0879               	movf	main@key,w
   377  05C9  120A  118A  2609  120A  118A  	fcall	_Lcd_Print_Char
   378  05CE  2DC0               	goto	l1008
   379  05CF  120A  118A  2800   	ljmp	start
   380  05D2                     __end_of_main:
   381                           
   382                           	psect	text1
   383  05D2                     __ptext1:	
   384 ;; *************** function _switch_press_scan *****************
   385 ;; Defined at:
   386 ;;		line 46 in file "keypad.c"
   387 ;; Parameters:    Size  Location     Type
   388 ;;		None
   389 ;; Auto vars:     Size  Location     Type
   390 ;;  key             1    3[COMMON] unsigned char 
   391 ;; Return value:  Size  Location     Type
   392 ;;                  1    wreg      unsigned char 
   393 ;; Registers used:
   394 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   395 ;; Tracked objects:
   396 ;;		On entry : 0/0
   397 ;;		On exit  : 0/0
   398 ;;		Unchanged: 0/0
   399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   400 ;;      Params:         0       0       0       0       0
   401 ;;      Locals:         1       0       0       0       0
   402 ;;      Temps:          0       0       0       0       0
   403 ;;      Totals:         1       0       0       0       0
   404 ;;Total ram usage:        1 bytes
   405 ;; Hardware stack levels used:    1
   406 ;; Hardware stack levels required when called:    1
   407 ;; This function calls:
   408 ;;		_keypad_scanner
   409 ;; This function is called by:
   410 ;;		_main
   411 ;; This function uses a non-reentrant model
   412 ;;
   413                           
   414                           
   415                           ;psect for function _switch_press_scan
   416  05D2                     _switch_press_scan:
   417  05D2                     l954:	
   418                           ;incstack = 0
   419                           ; Regs used in _switch_press_scan: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   420                           
   421                           
   422                           ;keypad.c: 48:             char key = 'n';
   423  05D2  306E               	movlw	110
   424  05D3  00FF               	movwf	btemp+1
   425  05D4  087F               	movf	btemp+1,w
   426  05D5  00F3               	movwf	switch_press_scan@key
   427                           
   428                           ;keypad.c: 49:             while(key=='n')
   429  05D6  2DDF               	goto	l958
   430  05D7                     l956:
   431                           
   432                           ;keypad.c: 50:             key = keypad_scanner();
   433  05D7  120A  118A  2668  120A  118A  	fcall	_keypad_scanner
   434  05DC  00FF               	movwf	btemp+1
   435  05DD  087F               	movf	btemp+1,w
   436  05DE  00F3               	movwf	switch_press_scan@key
   437  05DF                     l958:
   438                           
   439                           ;keypad.c: 49:             while(key=='n')
   440  05DF  306E               	movlw	110
   441  05E0  0673               	xorwf	switch_press_scan@key,w
   442  05E1  1903               	btfsc	3,2
   443  05E2  2DE4               	goto	u401
   444  05E3  2DE5               	goto	u400
   445  05E4                     u401:
   446  05E4  2DD7               	goto	l956
   447  05E5                     u400:
   448  05E5                     l960:
   449                           
   450                           ;keypad.c: 51:             return key;
   451  05E5  0873               	movf	switch_press_scan@key,w
   452  05E6                     l174:
   453  05E6  0008               	return
   454  05E7                     __end_of_switch_press_scan:
   455                           
   456                           	psect	text2
   457  0668                     __ptext2:	
   458 ;; *************** function _keypad_scanner *****************
   459 ;; Defined at:
   460 ;;		line 17 in file "keypad.c"
   461 ;; Parameters:    Size  Location     Type
   462 ;;		None
   463 ;; Auto vars:     Size  Location     Type
   464 ;;		None
   465 ;; Return value:  Size  Location     Type
   466 ;;                  1    wreg      unsigned char 
   467 ;; Registers used:
   468 ;;		wreg
   469 ;; Tracked objects:
   470 ;;		On entry : 0/0
   471 ;;		On exit  : 0/0
   472 ;;		Unchanged: 0/0
   473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   474 ;;      Params:         0       0       0       0       0
   475 ;;      Locals:         0       0       0       0       0
   476 ;;      Temps:          3       0       0       0       0
   477 ;;      Totals:         3       0       0       0       0
   478 ;;Total ram usage:        3 bytes
   479 ;; Hardware stack levels used:    1
   480 ;; This function calls:
   481 ;;		Nothing
   482 ;; This function is called by:
   483 ;;		_switch_press_scan
   484 ;; This function uses a non-reentrant model
   485 ;;
   486                           
   487                           
   488                           ;psect for function _keypad_scanner
   489  0668                     _keypad_scanner:
   490  0668                     l786:	
   491                           ;incstack = 0
   492                           ; Regs used in _keypad_scanner: [wreg]
   493                           
   494                           
   495                           ;keypad.c: 19:             RB0 = 0; RB1 = 1; RB2 = 1; RB3 = 1;
   496  0668  1283               	bcf	3,5	;RP0=0, select bank0
   497  0669  1303               	bcf	3,6	;RP1=0, select bank0
   498  066A  1006               	bcf	6,0	;volatile
   499  066B  1486               	bsf	6,1	;volatile
   500  066C  1506               	bsf	6,2	;volatile
   501  066D  1586               	bsf	6,3	;volatile
   502                           
   503                           ;keypad.c: 20:             if (RB4 == 0) { _delay((unsigned long)((100)*(800000000/4000.
      +                          0))); while (RB4==0); return '1'; }
   504  066E  1A06               	btfsc	6,4	;volatile
   505  066F  2E71               	goto	u51
   506  0670  2E72               	goto	u50
   507  0671                     u51:
   508  0671  2E86               	goto	l104
   509  0672                     u50:
   510  0672                     l788:
   511  0672  3066               	movlw	102
   512  0673  00F2               	movwf	??_keypad_scanner+2
   513  0674  3076               	movlw	118
   514  0675  00F1               	movwf	??_keypad_scanner+1
   515  0676  30C1               	movlw	193
   516  0677  00F0               	movwf	??_keypad_scanner
   517  0678                     u467:
   518  0678  0BF0               	decfsz	??_keypad_scanner,f
   519  0679  2E78               	goto	u467
   520  067A  0BF1               	decfsz	??_keypad_scanner+1,f
   521  067B  2E78               	goto	u467
   522  067C  0BF2               	decfsz	??_keypad_scanner+2,f
   523  067D  2E78               	goto	u467
   524  067E                     l105:
   525  067E  1283               	bcf	3,5	;RP0=0, select bank0
   526  067F  1303               	bcf	3,6	;RP1=0, select bank0
   527  0680  1E06               	btfss	6,4	;volatile
   528  0681  2E83               	goto	u61
   529  0682  2E84               	goto	u60
   530  0683                     u61:
   531  0683  2E7E               	goto	l105
   532  0684                     u60:
   533  0684                     l790:
   534  0684  3031               	movlw	49
   535  0685  2FFB               	goto	l108
   536  0686                     l104:
   537                           
   538                           ;keypad.c: 21:             if (RB5 == 0) { _delay((unsigned long)((100)*(800000000/4000.
      +                          0))); while (RB5==0); return '2'; }
   539  0686  1A86               	btfsc	6,5	;volatile
   540  0687  2E89               	goto	u71
   541  0688  2E8A               	goto	u70
   542  0689                     u71:
   543  0689  2E9E               	goto	l109
   544  068A                     u70:
   545  068A                     l794:
   546  068A  3066               	movlw	102
   547  068B  00F2               	movwf	??_keypad_scanner+2
   548  068C  3076               	movlw	118
   549  068D  00F1               	movwf	??_keypad_scanner+1
   550  068E  30C1               	movlw	193
   551  068F  00F0               	movwf	??_keypad_scanner
   552  0690                     u477:
   553  0690  0BF0               	decfsz	??_keypad_scanner,f
   554  0691  2E90               	goto	u477
   555  0692  0BF1               	decfsz	??_keypad_scanner+1,f
   556  0693  2E90               	goto	u477
   557  0694  0BF2               	decfsz	??_keypad_scanner+2,f
   558  0695  2E90               	goto	u477
   559  0696                     l110:
   560  0696  1283               	bcf	3,5	;RP0=0, select bank0
   561  0697  1303               	bcf	3,6	;RP1=0, select bank0
   562  0698  1E86               	btfss	6,5	;volatile
   563  0699  2E9B               	goto	u81
   564  069A  2E9C               	goto	u80
   565  069B                     u81:
   566  069B  2E96               	goto	l110
   567  069C                     u80:
   568  069C                     l796:
   569  069C  3032               	movlw	50
   570  069D  2FFB               	goto	l108
   571  069E                     l109:
   572                           
   573                           ;keypad.c: 22:             if (RB6 == 0) { _delay((unsigned long)((100)*(800000000/4000.
      +                          0))); while (RB6==0); return '3'; }
   574  069E  1B06               	btfsc	6,6	;volatile
   575  069F  2EA1               	goto	u91
   576  06A0  2EA2               	goto	u90
   577  06A1                     u91:
   578  06A1  2EB6               	goto	l113
   579  06A2                     u90:
   580  06A2                     l800:
   581  06A2  3066               	movlw	102
   582  06A3  00F2               	movwf	??_keypad_scanner+2
   583  06A4  3076               	movlw	118
   584  06A5  00F1               	movwf	??_keypad_scanner+1
   585  06A6  30C1               	movlw	193
   586  06A7  00F0               	movwf	??_keypad_scanner
   587  06A8                     u487:
   588  06A8  0BF0               	decfsz	??_keypad_scanner,f
   589  06A9  2EA8               	goto	u487
   590  06AA  0BF1               	decfsz	??_keypad_scanner+1,f
   591  06AB  2EA8               	goto	u487
   592  06AC  0BF2               	decfsz	??_keypad_scanner+2,f
   593  06AD  2EA8               	goto	u487
   594  06AE                     l114:
   595  06AE  1283               	bcf	3,5	;RP0=0, select bank0
   596  06AF  1303               	bcf	3,6	;RP1=0, select bank0
   597  06B0  1F06               	btfss	6,6	;volatile
   598  06B1  2EB3               	goto	u101
   599  06B2  2EB4               	goto	u100
   600  06B3                     u101:
   601  06B3  2EAE               	goto	l114
   602  06B4                     u100:
   603  06B4                     l802:
   604  06B4  3033               	movlw	51
   605  06B5  2FFB               	goto	l108
   606  06B6                     l113:
   607                           
   608                           ;keypad.c: 23:             if (RB7 == 0) { _delay((unsigned long)((100)*(800000000/4000.
      +                          0))); while (RB7==0); return 'A'; }
   609  06B6  1B86               	btfsc	6,7	;volatile
   610  06B7  2EB9               	goto	u111
   611  06B8  2EBA               	goto	u110
   612  06B9                     u111:
   613  06B9  2ECE               	goto	l117
   614  06BA                     u110:
   615  06BA                     l806:
   616  06BA  3066               	movlw	102
   617  06BB  00F2               	movwf	??_keypad_scanner+2
   618  06BC  3076               	movlw	118
   619  06BD  00F1               	movwf	??_keypad_scanner+1
   620  06BE  30C1               	movlw	193
   621  06BF  00F0               	movwf	??_keypad_scanner
   622  06C0                     u497:
   623  06C0  0BF0               	decfsz	??_keypad_scanner,f
   624  06C1  2EC0               	goto	u497
   625  06C2  0BF1               	decfsz	??_keypad_scanner+1,f
   626  06C3  2EC0               	goto	u497
   627  06C4  0BF2               	decfsz	??_keypad_scanner+2,f
   628  06C5  2EC0               	goto	u497
   629  06C6                     l118:
   630  06C6  1283               	bcf	3,5	;RP0=0, select bank0
   631  06C7  1303               	bcf	3,6	;RP1=0, select bank0
   632  06C8  1F86               	btfss	6,7	;volatile
   633  06C9  2ECB               	goto	u121
   634  06CA  2ECC               	goto	u120
   635  06CB                     u121:
   636  06CB  2EC6               	goto	l118
   637  06CC                     u120:
   638  06CC                     l808:
   639  06CC  3041               	movlw	65
   640  06CD  2FFB               	goto	l108
   641  06CE                     l117:
   642                           
   643                           ;keypad.c: 25:             RB0 = 1; RB1 = 0; RB2 = 1; RB3 = 1;
   644  06CE  1406               	bsf	6,0	;volatile
   645  06CF  1086               	bcf	6,1	;volatile
   646  06D0  1506               	bsf	6,2	;volatile
   647  06D1  1586               	bsf	6,3	;volatile
   648                           
   649                           ;keypad.c: 26:             if (RB4 == 0) { _delay((unsigned long)((100)*(800000000/4000.
      +                          0))); while (RB4==0); return '4'; }
   650  06D2  1A06               	btfsc	6,4	;volatile
   651  06D3  2ED5               	goto	u131
   652  06D4  2ED6               	goto	u130
   653  06D5                     u131:
   654  06D5  2EEA               	goto	l121
   655  06D6                     u130:
   656  06D6                     l812:
   657  06D6  3066               	movlw	102
   658  06D7  00F2               	movwf	??_keypad_scanner+2
   659  06D8  3076               	movlw	118
   660  06D9  00F1               	movwf	??_keypad_scanner+1
   661  06DA  30C1               	movlw	193
   662  06DB  00F0               	movwf	??_keypad_scanner
   663  06DC                     u507:
   664  06DC  0BF0               	decfsz	??_keypad_scanner,f
   665  06DD  2EDC               	goto	u507
   666  06DE  0BF1               	decfsz	??_keypad_scanner+1,f
   667  06DF  2EDC               	goto	u507
   668  06E0  0BF2               	decfsz	??_keypad_scanner+2,f
   669  06E1  2EDC               	goto	u507
   670  06E2                     l122:
   671  06E2  1283               	bcf	3,5	;RP0=0, select bank0
   672  06E3  1303               	bcf	3,6	;RP1=0, select bank0
   673  06E4  1E06               	btfss	6,4	;volatile
   674  06E5  2EE7               	goto	u141
   675  06E6  2EE8               	goto	u140
   676  06E7                     u141:
   677  06E7  2EE2               	goto	l122
   678  06E8                     u140:
   679  06E8                     l814:
   680  06E8  3034               	movlw	52
   681  06E9  2FFB               	goto	l108
   682  06EA                     l121:
   683                           
   684                           ;keypad.c: 27:             if (RB5 == 0) { _delay((unsigned long)((100)*(800000000/4000.
      +                          0))); while (RB5==0); return '5'; }
   685  06EA  1A86               	btfsc	6,5	;volatile
   686  06EB  2EED               	goto	u151
   687  06EC  2EEE               	goto	u150
   688  06ED                     u151:
   689  06ED  2F02               	goto	l125
   690  06EE                     u150:
   691  06EE                     l818:
   692  06EE  3066               	movlw	102
   693  06EF  00F2               	movwf	??_keypad_scanner+2
   694  06F0  3076               	movlw	118
   695  06F1  00F1               	movwf	??_keypad_scanner+1
   696  06F2  30C1               	movlw	193
   697  06F3  00F0               	movwf	??_keypad_scanner
   698  06F4                     u517:
   699  06F4  0BF0               	decfsz	??_keypad_scanner,f
   700  06F5  2EF4               	goto	u517
   701  06F6  0BF1               	decfsz	??_keypad_scanner+1,f
   702  06F7  2EF4               	goto	u517
   703  06F8  0BF2               	decfsz	??_keypad_scanner+2,f
   704  06F9  2EF4               	goto	u517
   705  06FA                     l126:
   706  06FA  1283               	bcf	3,5	;RP0=0, select bank0
   707  06FB  1303               	bcf	3,6	;RP1=0, select bank0
   708  06FC  1E86               	btfss	6,5	;volatile
   709  06FD  2EFF               	goto	u161
   710  06FE  2F00               	goto	u160
   711  06FF                     u161:
   712  06FF  2EFA               	goto	l126
   713  0700                     u160:
   714  0700                     l820:
   715  0700  3035               	movlw	53
   716  0701  2FFB               	goto	l108
   717  0702                     l125:
   718                           
   719                           ;keypad.c: 28:             if (RB6 == 0) { _delay((unsigned long)((100)*(800000000/4000.
      +                          0))); while (RB6==0); return '6'; }
   720  0702  1B06               	btfsc	6,6	;volatile
   721  0703  2F05               	goto	u171
   722  0704  2F06               	goto	u170
   723  0705                     u171:
   724  0705  2F1A               	goto	l129
   725  0706                     u170:
   726  0706                     l824:
   727  0706  3066               	movlw	102
   728  0707  00F2               	movwf	??_keypad_scanner+2
   729  0708  3076               	movlw	118
   730  0709  00F1               	movwf	??_keypad_scanner+1
   731  070A  30C1               	movlw	193
   732  070B  00F0               	movwf	??_keypad_scanner
   733  070C                     u527:
   734  070C  0BF0               	decfsz	??_keypad_scanner,f
   735  070D  2F0C               	goto	u527
   736  070E  0BF1               	decfsz	??_keypad_scanner+1,f
   737  070F  2F0C               	goto	u527
   738  0710  0BF2               	decfsz	??_keypad_scanner+2,f
   739  0711  2F0C               	goto	u527
   740  0712                     l130:
   741  0712  1283               	bcf	3,5	;RP0=0, select bank0
   742  0713  1303               	bcf	3,6	;RP1=0, select bank0
   743  0714  1F06               	btfss	6,6	;volatile
   744  0715  2F17               	goto	u181
   745  0716  2F18               	goto	u180
   746  0717                     u181:
   747  0717  2F12               	goto	l130
   748  0718                     u180:
   749  0718                     l826:
   750  0718  3036               	movlw	54
   751  0719  2FFB               	goto	l108
   752  071A                     l129:
   753                           
   754                           ;keypad.c: 29:             if (RB7 == 0) { _delay((unsigned long)((100)*(800000000/4000.
      +                          0))); while (RB7==0); return 'B'; }
   755  071A  1B86               	btfsc	6,7	;volatile
   756  071B  2F1D               	goto	u191
   757  071C  2F1E               	goto	u190
   758  071D                     u191:
   759  071D  2F32               	goto	l133
   760  071E                     u190:
   761  071E                     l830:
   762  071E  3066               	movlw	102
   763  071F  00F2               	movwf	??_keypad_scanner+2
   764  0720  3076               	movlw	118
   765  0721  00F1               	movwf	??_keypad_scanner+1
   766  0722  30C1               	movlw	193
   767  0723  00F0               	movwf	??_keypad_scanner
   768  0724                     u537:
   769  0724  0BF0               	decfsz	??_keypad_scanner,f
   770  0725  2F24               	goto	u537
   771  0726  0BF1               	decfsz	??_keypad_scanner+1,f
   772  0727  2F24               	goto	u537
   773  0728  0BF2               	decfsz	??_keypad_scanner+2,f
   774  0729  2F24               	goto	u537
   775  072A                     l134:
   776  072A  1283               	bcf	3,5	;RP0=0, select bank0
   777  072B  1303               	bcf	3,6	;RP1=0, select bank0
   778  072C  1F86               	btfss	6,7	;volatile
   779  072D  2F2F               	goto	u201
   780  072E  2F30               	goto	u200
   781  072F                     u201:
   782  072F  2F2A               	goto	l134
   783  0730                     u200:
   784  0730                     l832:
   785  0730  3042               	movlw	66
   786  0731  2FFB               	goto	l108
   787  0732                     l133:
   788                           
   789                           ;keypad.c: 31:             RB0 = 1; RB1 = 1; RB2 = 0; RB3 = 1;
   790  0732  1406               	bsf	6,0	;volatile
   791  0733  1486               	bsf	6,1	;volatile
   792  0734  1106               	bcf	6,2	;volatile
   793  0735  1586               	bsf	6,3	;volatile
   794                           
   795                           ;keypad.c: 32:             if (RB4 == 0) { _delay((unsigned long)((100)*(800000000/4000.
      +                          0))); while (RB4==0); return '7'; }
   796  0736  1A06               	btfsc	6,4	;volatile
   797  0737  2F39               	goto	u211
   798  0738  2F3A               	goto	u210
   799  0739                     u211:
   800  0739  2F4E               	goto	l137
   801  073A                     u210:
   802  073A                     l836:
   803  073A  3066               	movlw	102
   804  073B  00F2               	movwf	??_keypad_scanner+2
   805  073C  3076               	movlw	118
   806  073D  00F1               	movwf	??_keypad_scanner+1
   807  073E  30C1               	movlw	193
   808  073F  00F0               	movwf	??_keypad_scanner
   809  0740                     u547:
   810  0740  0BF0               	decfsz	??_keypad_scanner,f
   811  0741  2F40               	goto	u547
   812  0742  0BF1               	decfsz	??_keypad_scanner+1,f
   813  0743  2F40               	goto	u547
   814  0744  0BF2               	decfsz	??_keypad_scanner+2,f
   815  0745  2F40               	goto	u547
   816  0746                     l138:
   817  0746  1283               	bcf	3,5	;RP0=0, select bank0
   818  0747  1303               	bcf	3,6	;RP1=0, select bank0
   819  0748  1E06               	btfss	6,4	;volatile
   820  0749  2F4B               	goto	u221
   821  074A  2F4C               	goto	u220
   822  074B                     u221:
   823  074B  2F46               	goto	l138
   824  074C                     u220:
   825  074C                     l838:
   826  074C  3037               	movlw	55
   827  074D  2FFB               	goto	l108
   828  074E                     l137:
   829                           
   830                           ;keypad.c: 33:             if (RB5 == 0) { _delay((unsigned long)((100)*(800000000/4000.
      +                          0))); while (RB5==0); return '8'; }
   831  074E  1A86               	btfsc	6,5	;volatile
   832  074F  2F51               	goto	u231
   833  0750  2F52               	goto	u230
   834  0751                     u231:
   835  0751  2F66               	goto	l141
   836  0752                     u230:
   837  0752                     l842:
   838  0752  3066               	movlw	102
   839  0753  00F2               	movwf	??_keypad_scanner+2
   840  0754  3076               	movlw	118
   841  0755  00F1               	movwf	??_keypad_scanner+1
   842  0756  30C1               	movlw	193
   843  0757  00F0               	movwf	??_keypad_scanner
   844  0758                     u557:
   845  0758  0BF0               	decfsz	??_keypad_scanner,f
   846  0759  2F58               	goto	u557
   847  075A  0BF1               	decfsz	??_keypad_scanner+1,f
   848  075B  2F58               	goto	u557
   849  075C  0BF2               	decfsz	??_keypad_scanner+2,f
   850  075D  2F58               	goto	u557
   851  075E                     l142:
   852  075E  1283               	bcf	3,5	;RP0=0, select bank0
   853  075F  1303               	bcf	3,6	;RP1=0, select bank0
   854  0760  1E86               	btfss	6,5	;volatile
   855  0761  2F63               	goto	u241
   856  0762  2F64               	goto	u240
   857  0763                     u241:
   858  0763  2F5E               	goto	l142
   859  0764                     u240:
   860  0764                     l844:
   861  0764  3038               	movlw	56
   862  0765  2FFB               	goto	l108
   863  0766                     l141:
   864                           
   865                           ;keypad.c: 34:             if (RB6 == 0) { _delay((unsigned long)((100)*(800000000/4000.
      +                          0))); while (RB6==0); return '9'; }
   866  0766  1B06               	btfsc	6,6	;volatile
   867  0767  2F69               	goto	u251
   868  0768  2F6A               	goto	u250
   869  0769                     u251:
   870  0769  2F7E               	goto	l145
   871  076A                     u250:
   872  076A                     l848:
   873  076A  3066               	movlw	102
   874  076B  00F2               	movwf	??_keypad_scanner+2
   875  076C  3076               	movlw	118
   876  076D  00F1               	movwf	??_keypad_scanner+1
   877  076E  30C1               	movlw	193
   878  076F  00F0               	movwf	??_keypad_scanner
   879  0770                     u567:
   880  0770  0BF0               	decfsz	??_keypad_scanner,f
   881  0771  2F70               	goto	u567
   882  0772  0BF1               	decfsz	??_keypad_scanner+1,f
   883  0773  2F70               	goto	u567
   884  0774  0BF2               	decfsz	??_keypad_scanner+2,f
   885  0775  2F70               	goto	u567
   886  0776                     l146:
   887  0776  1283               	bcf	3,5	;RP0=0, select bank0
   888  0777  1303               	bcf	3,6	;RP1=0, select bank0
   889  0778  1F06               	btfss	6,6	;volatile
   890  0779  2F7B               	goto	u261
   891  077A  2F7C               	goto	u260
   892  077B                     u261:
   893  077B  2F76               	goto	l146
   894  077C                     u260:
   895  077C                     l850:
   896  077C  3039               	movlw	57
   897  077D  2FFB               	goto	l108
   898  077E                     l145:
   899                           
   900                           ;keypad.c: 35:             if (RB7 == 0) { _delay((unsigned long)((100)*(800000000/4000.
      +                          0))); while (RB7==0); return 'C'; }
   901  077E  1B86               	btfsc	6,7	;volatile
   902  077F  2F81               	goto	u271
   903  0780  2F82               	goto	u270
   904  0781                     u271:
   905  0781  2F96               	goto	l149
   906  0782                     u270:
   907  0782                     l854:
   908  0782  3066               	movlw	102
   909  0783  00F2               	movwf	??_keypad_scanner+2
   910  0784  3076               	movlw	118
   911  0785  00F1               	movwf	??_keypad_scanner+1
   912  0786  30C1               	movlw	193
   913  0787  00F0               	movwf	??_keypad_scanner
   914  0788                     u577:
   915  0788  0BF0               	decfsz	??_keypad_scanner,f
   916  0789  2F88               	goto	u577
   917  078A  0BF1               	decfsz	??_keypad_scanner+1,f
   918  078B  2F88               	goto	u577
   919  078C  0BF2               	decfsz	??_keypad_scanner+2,f
   920  078D  2F88               	goto	u577
   921  078E                     l150:
   922  078E  1283               	bcf	3,5	;RP0=0, select bank0
   923  078F  1303               	bcf	3,6	;RP1=0, select bank0
   924  0790  1F86               	btfss	6,7	;volatile
   925  0791  2F93               	goto	u281
   926  0792  2F94               	goto	u280
   927  0793                     u281:
   928  0793  2F8E               	goto	l150
   929  0794                     u280:
   930  0794                     l856:
   931  0794  3043               	movlw	67
   932  0795  2FFB               	goto	l108
   933  0796                     l149:
   934                           
   935                           ;keypad.c: 37:             RB0 = 1; RB1 = 1; RB2 = 1; RB3 = 0;
   936  0796  1406               	bsf	6,0	;volatile
   937  0797  1486               	bsf	6,1	;volatile
   938  0798  1506               	bsf	6,2	;volatile
   939  0799  1186               	bcf	6,3	;volatile
   940                           
   941                           ;keypad.c: 38:             if (RB4 == 0) { _delay((unsigned long)((100)*(800000000/4000.
      +                          0))); while (RB4==0); return '*'; }
   942  079A  1A06               	btfsc	6,4	;volatile
   943  079B  2F9D               	goto	u291
   944  079C  2F9E               	goto	u290
   945  079D                     u291:
   946  079D  2FB2               	goto	l153
   947  079E                     u290:
   948  079E                     l860:
   949  079E  3066               	movlw	102
   950  079F  00F2               	movwf	??_keypad_scanner+2
   951  07A0  3076               	movlw	118
   952  07A1  00F1               	movwf	??_keypad_scanner+1
   953  07A2  30C1               	movlw	193
   954  07A3  00F0               	movwf	??_keypad_scanner
   955  07A4                     u587:
   956  07A4  0BF0               	decfsz	??_keypad_scanner,f
   957  07A5  2FA4               	goto	u587
   958  07A6  0BF1               	decfsz	??_keypad_scanner+1,f
   959  07A7  2FA4               	goto	u587
   960  07A8  0BF2               	decfsz	??_keypad_scanner+2,f
   961  07A9  2FA4               	goto	u587
   962  07AA                     l154:
   963  07AA  1283               	bcf	3,5	;RP0=0, select bank0
   964  07AB  1303               	bcf	3,6	;RP1=0, select bank0
   965  07AC  1E06               	btfss	6,4	;volatile
   966  07AD  2FAF               	goto	u301
   967  07AE  2FB0               	goto	u300
   968  07AF                     u301:
   969  07AF  2FAA               	goto	l154
   970  07B0                     u300:
   971  07B0                     l862:
   972  07B0  302A               	movlw	42
   973  07B1  2FFB               	goto	l108
   974  07B2                     l153:
   975                           
   976                           ;keypad.c: 39:             if (RB5 == 0) { _delay((unsigned long)((100)*(800000000/4000.
      +                          0))); while (RB5==0); return '0'; }
   977  07B2  1A86               	btfsc	6,5	;volatile
   978  07B3  2FB5               	goto	u311
   979  07B4  2FB6               	goto	u310
   980  07B5                     u311:
   981  07B5  2FCA               	goto	l157
   982  07B6                     u310:
   983  07B6                     l866:
   984  07B6  3066               	movlw	102
   985  07B7  00F2               	movwf	??_keypad_scanner+2
   986  07B8  3076               	movlw	118
   987  07B9  00F1               	movwf	??_keypad_scanner+1
   988  07BA  30C1               	movlw	193
   989  07BB  00F0               	movwf	??_keypad_scanner
   990  07BC                     u597:
   991  07BC  0BF0               	decfsz	??_keypad_scanner,f
   992  07BD  2FBC               	goto	u597
   993  07BE  0BF1               	decfsz	??_keypad_scanner+1,f
   994  07BF  2FBC               	goto	u597
   995  07C0  0BF2               	decfsz	??_keypad_scanner+2,f
   996  07C1  2FBC               	goto	u597
   997  07C2                     l158:
   998  07C2  1283               	bcf	3,5	;RP0=0, select bank0
   999  07C3  1303               	bcf	3,6	;RP1=0, select bank0
  1000  07C4  1E86               	btfss	6,5	;volatile
  1001  07C5  2FC7               	goto	u321
  1002  07C6  2FC8               	goto	u320
  1003  07C7                     u321:
  1004  07C7  2FC2               	goto	l158
  1005  07C8                     u320:
  1006  07C8                     l868:
  1007  07C8  3030               	movlw	48
  1008  07C9  2FFB               	goto	l108
  1009  07CA                     l157:
  1010                           
  1011                           ;keypad.c: 40:             if (RB6 == 0) { _delay((unsigned long)((100)*(800000000/4000.
      +                          0))); while (RB6==0); return '#'; }
  1012  07CA  1B06               	btfsc	6,6	;volatile
  1013  07CB  2FCD               	goto	u331
  1014  07CC  2FCE               	goto	u330
  1015  07CD                     u331:
  1016  07CD  2FE2               	goto	l161
  1017  07CE                     u330:
  1018  07CE                     l872:
  1019  07CE  3066               	movlw	102
  1020  07CF  00F2               	movwf	??_keypad_scanner+2
  1021  07D0  3076               	movlw	118
  1022  07D1  00F1               	movwf	??_keypad_scanner+1
  1023  07D2  30C1               	movlw	193
  1024  07D3  00F0               	movwf	??_keypad_scanner
  1025  07D4                     u607:
  1026  07D4  0BF0               	decfsz	??_keypad_scanner,f
  1027  07D5  2FD4               	goto	u607
  1028  07D6  0BF1               	decfsz	??_keypad_scanner+1,f
  1029  07D7  2FD4               	goto	u607
  1030  07D8  0BF2               	decfsz	??_keypad_scanner+2,f
  1031  07D9  2FD4               	goto	u607
  1032  07DA                     l162:
  1033  07DA  1283               	bcf	3,5	;RP0=0, select bank0
  1034  07DB  1303               	bcf	3,6	;RP1=0, select bank0
  1035  07DC  1F06               	btfss	6,6	;volatile
  1036  07DD  2FDF               	goto	u341
  1037  07DE  2FE0               	goto	u340
  1038  07DF                     u341:
  1039  07DF  2FDA               	goto	l162
  1040  07E0                     u340:
  1041  07E0                     l874:
  1042  07E0  3023               	movlw	35
  1043  07E1  2FFB               	goto	l108
  1044  07E2                     l161:
  1045                           
  1046                           ;keypad.c: 41:             if (RB7 == 0) { _delay((unsigned long)((100)*(800000000/4000.
      +                          0))); while (RB7==0); return 'D'; }
  1047  07E2  1B86               	btfsc	6,7	;volatile
  1048  07E3  2FE5               	goto	u351
  1049  07E4  2FE6               	goto	u350
  1050  07E5                     u351:
  1051  07E5  2FFA               	goto	l884
  1052  07E6                     u350:
  1053  07E6                     l878:
  1054  07E6  3066               	movlw	102
  1055  07E7  00F2               	movwf	??_keypad_scanner+2
  1056  07E8  3076               	movlw	118
  1057  07E9  00F1               	movwf	??_keypad_scanner+1
  1058  07EA  30C1               	movlw	193
  1059  07EB  00F0               	movwf	??_keypad_scanner
  1060  07EC                     u617:
  1061  07EC  0BF0               	decfsz	??_keypad_scanner,f
  1062  07ED  2FEC               	goto	u617
  1063  07EE  0BF1               	decfsz	??_keypad_scanner+1,f
  1064  07EF  2FEC               	goto	u617
  1065  07F0  0BF2               	decfsz	??_keypad_scanner+2,f
  1066  07F1  2FEC               	goto	u617
  1067  07F2                     l166:
  1068  07F2  1283               	bcf	3,5	;RP0=0, select bank0
  1069  07F3  1303               	bcf	3,6	;RP1=0, select bank0
  1070  07F4  1F86               	btfss	6,7	;volatile
  1071  07F5  2FF7               	goto	u361
  1072  07F6  2FF8               	goto	u360
  1073  07F7                     u361:
  1074  07F7  2FF2               	goto	l166
  1075  07F8                     u360:
  1076  07F8                     l880:
  1077  07F8  3044               	movlw	68
  1078  07F9  2FFB               	goto	l108
  1079  07FA                     l884:
  1080                           
  1081                           ;keypad.c: 43:     return 'n';
  1082  07FA  306E               	movlw	110
  1083  07FB                     l108:
  1084  07FB  0008               	return
  1085  07FC                     __end_of_keypad_scanner:
  1086                           
  1087                           	psect	text3
  1088  0609                     __ptext3:	
  1089 ;; *************** function _Lcd_Print_Char *****************
  1090 ;; Defined at:
  1091 ;;		line 99 in file "main.c"
  1092 ;; Parameters:    Size  Location     Type
  1093 ;;  data            1    wreg     unsigned char 
  1094 ;; Auto vars:     Size  Location     Type
  1095 ;;  data            1    8[COMMON] unsigned char 
  1096 ;;  i               2    6[COMMON] int 
  1097 ;;  i               2    4[COMMON] int 
  1098 ;;  Upper_Nibble    1    3[COMMON] unsigned char 
  1099 ;;  Lower_Nibble    1    2[COMMON] unsigned char 
  1100 ;; Return value:  Size  Location     Type
  1101 ;;                  1    wreg      void 
  1102 ;; Registers used:
  1103 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1104 ;; Tracked objects:
  1105 ;;		On entry : 0/0
  1106 ;;		On exit  : 0/0
  1107 ;;		Unchanged: 0/0
  1108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1109 ;;      Params:         0       0       0       0       0
  1110 ;;      Locals:         7       0       0       0       0
  1111 ;;      Temps:          1       0       0       0       0
  1112 ;;      Totals:         8       0       0       0       0
  1113 ;;Total ram usage:        8 bytes
  1114 ;; Hardware stack levels used:    1
  1115 ;; Hardware stack levels required when called:    1
  1116 ;; This function calls:
  1117 ;;		_Lcd_SetBit
  1118 ;; This function is called by:
  1119 ;;		_main
  1120 ;;		_Lcd_Print_String
  1121 ;; This function uses a non-reentrant model
  1122 ;;
  1123                           
  1124                           
  1125                           ;psect for function _Lcd_Print_Char
  1126  0609                     _Lcd_Print_Char:
  1127                           
  1128                           ;incstack = 0
  1129                           ; Regs used in _Lcd_Print_Char: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1130                           ;Lcd_Print_Char@data stored from wreg
  1131  0609  00F8               	movwf	Lcd_Print_Char@data
  1132  060A                     l922:
  1133                           
  1134                           ;main.c: 99: void Lcd_Print_Char(char data);main.c: 100: {;main.c: 101:    char Lower_Ni
      +                          bble,Upper_Nibble;;main.c: 102:    Lower_Nibble = data&0x0F;
  1135  060A  0878               	movf	Lcd_Print_Char@data,w
  1136  060B  390F               	andlw	15
  1137  060C  00FF               	movwf	btemp+1
  1138  060D  087F               	movf	btemp+1,w
  1139  060E  00F2               	movwf	Lcd_Print_Char@Lower_Nibble
  1140                           
  1141                           ;main.c: 103:    Upper_Nibble = data&0xF0;
  1142  060F  0878               	movf	Lcd_Print_Char@data,w
  1143  0610  39F0               	andlw	240
  1144  0611  00FF               	movwf	btemp+1
  1145  0612  087F               	movf	btemp+1,w
  1146  0613  00F3               	movwf	Lcd_Print_Char@Upper_Nibble
  1147  0614                     l924:
  1148                           
  1149                           ;main.c: 104:    RD2 = 1;
  1150  0614  1283               	bcf	3,5	;RP0=0, select bank0
  1151  0615  1303               	bcf	3,6	;RP1=0, select bank0
  1152  0616  1508               	bsf	8,2	;volatile
  1153  0617                     l926:
  1154                           
  1155                           ;main.c: 105:    Lcd_SetBit(Upper_Nibble>>4);
  1156  0617  0873               	movf	Lcd_Print_Char@Upper_Nibble,w
  1157  0618  00F1               	movwf	??_Lcd_Print_Char
  1158  0619  3004               	movlw	4
  1159  061A                     u375:
  1160  061A  1003               	clrc
  1161  061B  0CF1               	rrf	??_Lcd_Print_Char,f
  1162  061C  3EFF               	addlw	-1
  1163  061D  1D03               	skipz
  1164  061E  2E1A               	goto	u375
  1165  061F  0871               	movf	??_Lcd_Print_Char,w
  1166  0620  120A  118A  25E7  120A  118A  	fcall	_Lcd_SetBit
  1167  0625                     l928:
  1168                           
  1169                           ;main.c: 106:    RD3 = 1;
  1170  0625  1283               	bcf	3,5	;RP0=0, select bank0
  1171  0626  1303               	bcf	3,6	;RP1=0, select bank0
  1172  0627  1588               	bsf	8,3	;volatile
  1173  0628                     l930:
  1174                           
  1175                           ;main.c: 107:    for(int i=2130483; i<=0; i--) __nop();
  1176  0628  3033               	movlw	51
  1177  0629  00F4               	movwf	Lcd_Print_Char@i
  1178  062A  3082               	movlw	130
  1179  062B  00F5               	movwf	Lcd_Print_Char@i+1
  1180  062C                     l53:
  1181  062C  0000               	nop
  1182  062D                     l936:
  1183  062D  30FF               	movlw	255
  1184  062E  07F4               	addwf	Lcd_Print_Char@i,f
  1185  062F  1803               	skipnc
  1186  0630  0AF5               	incf	Lcd_Print_Char@i+1,f
  1187  0631  30FF               	movlw	255
  1188  0632  07F5               	addwf	Lcd_Print_Char@i+1,f
  1189  0633                     l938:
  1190  0633  0875               	movf	Lcd_Print_Char@i+1,w
  1191  0634  3A80               	xorlw	128
  1192  0635  00FF               	movwf	btemp+1
  1193  0636  3080               	movlw	128
  1194  0637  027F               	subwf	btemp+1,w
  1195  0638  1D03               	skipz
  1196  0639  2E3C               	goto	u385
  1197  063A  3001               	movlw	1
  1198  063B  0274               	subwf	Lcd_Print_Char@i,w
  1199  063C                     u385:
  1200  063C  1C03               	skipc
  1201  063D  2E3F               	goto	u381
  1202  063E  2E40               	goto	u380
  1203  063F                     u381:
  1204  063F  2E2C               	goto	l53
  1205  0640                     u380:
  1206  0640                     l54:
  1207                           
  1208                           ;main.c: 108:    RD3 = 0;
  1209  0640  1283               	bcf	3,5	;RP0=0, select bank0
  1210  0641  1303               	bcf	3,6	;RP1=0, select bank0
  1211  0642  1188               	bcf	8,3	;volatile
  1212  0643                     l940:
  1213                           
  1214                           ;main.c: 109:    Lcd_SetBit(Lower_Nibble);
  1215  0643  0872               	movf	Lcd_Print_Char@Lower_Nibble,w
  1216  0644  120A  118A  25E7  120A  118A  	fcall	_Lcd_SetBit
  1217  0649                     l942:
  1218                           
  1219                           ;main.c: 110:    RD3 = 1;
  1220  0649  1283               	bcf	3,5	;RP0=0, select bank0
  1221  064A  1303               	bcf	3,6	;RP1=0, select bank0
  1222  064B  1588               	bsf	8,3	;volatile
  1223  064C                     l944:
  1224                           
  1225                           ;main.c: 111:    for(int i=2130483; i<=0; i--) __nop();
  1226  064C  3033               	movlw	51
  1227  064D  00F6               	movwf	Lcd_Print_Char@i_67
  1228  064E  3082               	movlw	130
  1229  064F  00F7               	movwf	Lcd_Print_Char@i_67+1
  1230  0650                     l55:
  1231  0650  0000               	nop
  1232  0651                     l950:
  1233  0651  30FF               	movlw	255
  1234  0652  07F6               	addwf	Lcd_Print_Char@i_67,f
  1235  0653  1803               	skipnc
  1236  0654  0AF7               	incf	Lcd_Print_Char@i_67+1,f
  1237  0655  30FF               	movlw	255
  1238  0656  07F7               	addwf	Lcd_Print_Char@i_67+1,f
  1239  0657                     l952:
  1240  0657  0877               	movf	Lcd_Print_Char@i_67+1,w
  1241  0658  3A80               	xorlw	128
  1242  0659  00FF               	movwf	btemp+1
  1243  065A  3080               	movlw	128
  1244  065B  027F               	subwf	btemp+1,w
  1245  065C  1D03               	skipz
  1246  065D  2E60               	goto	u395
  1247  065E  3001               	movlw	1
  1248  065F  0276               	subwf	Lcd_Print_Char@i_67,w
  1249  0660                     u395:
  1250  0660  1C03               	skipc
  1251  0661  2E63               	goto	u391
  1252  0662  2E64               	goto	u390
  1253  0663                     u391:
  1254  0663  2E50               	goto	l55
  1255  0664                     u390:
  1256  0664                     l56:
  1257                           
  1258                           ;main.c: 112:    RD3 = 0;
  1259  0664  1283               	bcf	3,5	;RP0=0, select bank0
  1260  0665  1303               	bcf	3,6	;RP1=0, select bank0
  1261  0666  1188               	bcf	8,3	;volatile
  1262  0667                     l57:
  1263  0667  0008               	return
  1264  0668                     __end_of_Lcd_Print_Char:
  1265                           
  1266                           	psect	text4
  1267  05E7                     __ptext4:	
  1268 ;; *************** function _Lcd_SetBit *****************
  1269 ;; Defined at:
  1270 ;;		line 22 in file "main.c"
  1271 ;; Parameters:    Size  Location     Type
  1272 ;;  data_bit        1    wreg     unsigned char 
  1273 ;; Auto vars:     Size  Location     Type
  1274 ;;  data_bit        1    0[COMMON] unsigned char 
  1275 ;; Return value:  Size  Location     Type
  1276 ;;                  1    wreg      void 
  1277 ;; Registers used:
  1278 ;;		wreg
  1279 ;; Tracked objects:
  1280 ;;		On entry : 0/0
  1281 ;;		On exit  : 0/0
  1282 ;;		Unchanged: 0/0
  1283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1284 ;;      Params:         0       0       0       0       0
  1285 ;;      Locals:         1       0       0       0       0
  1286 ;;      Temps:          0       0       0       0       0
  1287 ;;      Totals:         1       0       0       0       0
  1288 ;;Total ram usage:        1 bytes
  1289 ;; Hardware stack levels used:    1
  1290 ;; This function calls:
  1291 ;;		Nothing
  1292 ;; This function is called by:
  1293 ;;		_Lcd_Print_Char
  1294 ;;		_Lcd_Cmd
  1295 ;;		_Lcd_Start
  1296 ;; This function uses a non-reentrant model
  1297 ;;
  1298                           
  1299                           
  1300                           ;psect for function _Lcd_SetBit
  1301  05E7                     _Lcd_SetBit:
  1302                           
  1303                           ;incstack = 0
  1304                           ; Regs used in _Lcd_SetBit: [wreg]
  1305                           ;Lcd_SetBit@data_bit stored from wreg
  1306  05E7  00F0               	movwf	Lcd_SetBit@data_bit
  1307  05E8                     l766:
  1308                           
  1309                           ;main.c: 22: void Lcd_SetBit(char data_bit);main.c: 23: {;main.c: 24:  if(data_bit& 1)
  1310  05E8  1C70               	btfss	Lcd_SetBit@data_bit,0
  1311  05E9  2DEB               	goto	u11
  1312  05EA  2DEC               	goto	u10
  1313  05EB                     u11:
  1314  05EB  2DF0               	goto	l25
  1315  05EC                     u10:
  1316  05EC                     l768:
  1317                           
  1318                           ;main.c: 25:   RD4 = 1;
  1319  05EC  1283               	bcf	3,5	;RP0=0, select bank0
  1320  05ED  1303               	bcf	3,6	;RP1=0, select bank0
  1321  05EE  1608               	bsf	8,4	;volatile
  1322  05EF  2DF3               	goto	l26
  1323  05F0                     l25:	
  1324                           ;main.c: 26:  else
  1325                           
  1326                           
  1327                           ;main.c: 27:   RD4 = 0;
  1328  05F0  1283               	bcf	3,5	;RP0=0, select bank0
  1329  05F1  1303               	bcf	3,6	;RP1=0, select bank0
  1330  05F2  1208               	bcf	8,4	;volatile
  1331  05F3                     l26:
  1332                           
  1333                           ;main.c: 29:  if(data_bit& 2)
  1334  05F3  1CF0               	btfss	Lcd_SetBit@data_bit,1
  1335  05F4  2DF6               	goto	u21
  1336  05F5  2DF7               	goto	u20
  1337  05F6                     u21:
  1338  05F6  2DF9               	goto	l27
  1339  05F7                     u20:
  1340  05F7                     l770:
  1341                           
  1342                           ;main.c: 30:   RD5 = 1;
  1343  05F7  1688               	bsf	8,5	;volatile
  1344  05F8  2DFA               	goto	l28
  1345  05F9                     l27:	
  1346                           ;main.c: 31:  else
  1347                           
  1348                           
  1349                           ;main.c: 32:   RD5 = 0;
  1350  05F9  1288               	bcf	8,5	;volatile
  1351  05FA                     l28:
  1352                           
  1353                           ;main.c: 34:  if(data_bit& 4)
  1354  05FA  1D70               	btfss	Lcd_SetBit@data_bit,2
  1355  05FB  2DFD               	goto	u31
  1356  05FC  2DFE               	goto	u30
  1357  05FD                     u31:
  1358  05FD  2E00               	goto	l29
  1359  05FE                     u30:
  1360  05FE                     l772:
  1361                           
  1362                           ;main.c: 35:   RD6 = 1;
  1363  05FE  1708               	bsf	8,6	;volatile
  1364  05FF  2E01               	goto	l30
  1365  0600                     l29:	
  1366                           ;main.c: 36:  else
  1367                           
  1368                           
  1369                           ;main.c: 37:   RD6 = 0;
  1370  0600  1308               	bcf	8,6	;volatile
  1371  0601                     l30:
  1372                           
  1373                           ;main.c: 39:  if(data_bit& 8)
  1374  0601  1DF0               	btfss	Lcd_SetBit@data_bit,3
  1375  0602  2E04               	goto	u41
  1376  0603  2E05               	goto	u40
  1377  0604                     u41:
  1378  0604  2E07               	goto	l31
  1379  0605                     u40:
  1380  0605                     l774:
  1381                           
  1382                           ;main.c: 40:   RD7 = 1;
  1383  0605  1788               	bsf	8,7	;volatile
  1384  0606  2E08               	goto	l33
  1385  0607                     l31:	
  1386                           ;main.c: 41:  else
  1387                           
  1388                           
  1389                           ;main.c: 42:   RD7 = 0;
  1390  0607  1388               	bcf	8,7	;volatile
  1391  0608                     l33:
  1392  0608  0008               	return
  1393  0609                     __end_of_Lcd_SetBit:
  1394  007E                     btemp	set	126	;btemp
  1395  007E                     wtemp0	set	126
  1396                           
  1397                           	psect	config
  1398                           
  1399                           ;Config register CONFIG @ 0x2007
  1400                           ;	Oscillator Selection bits
  1401                           ;	FOSC = HS, HS oscillator
  1402                           ;	Watchdog Timer Enable bit
  1403                           ;	WDTE = OFF, WDT disabled
  1404                           ;	Power-up Timer Enable bit
  1405                           ;	PWRTE = OFF, PWRT disabled
  1406                           ;	Brown-out Reset Enable bit
  1407                           ;	BOREN = OFF, BOR disabled
  1408                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1409                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1410                           ;	Data EEPROM Memory Code Protection bit
  1411                           ;	CPD = OFF, Data EEPROM code protection off
  1412                           ;	Flash Program Memory Write Enable bits
  1413                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1414                           ;	In-Circuit Debugger Mode bit
  1415                           ;	DEBUG = 0x1, unprogrammed default
  1416                           ;	Flash Program Memory Code Protection bit
  1417                           ;	CP = OFF, Code protection off
  1418  2007                     	org	8199
  1419  2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_Lcd_Print_Char
    _switch_press_scan->_keypad_scanner
    _Lcd_Print_Char->_Lcd_SetBit

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     225
                                              9 COMMON     1     1      0
                     _Lcd_Print_Char
                  _switch_press_scan
 ---------------------------------------------------------------------------------
 (1) _switch_press_scan                                    1     1      0      30
                                              3 COMMON     1     1      0
                     _keypad_scanner
 ---------------------------------------------------------------------------------
 (2) _keypad_scanner                                       3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Print_Char                                       8     8      0     180
                                              1 COMMON     8     8      0
                         _Lcd_SetBit
 ---------------------------------------------------------------------------------
 (2) _Lcd_SetBit                                           1     1      0      60
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Print_Char
     _Lcd_SetBit
   _switch_press_scan
     _keypad_scanner

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Wed Aug 05 10:46:14 2020

                        l30 0601                          l31 0607                          l33 0608  
                        l25 05F0                          l26 05F3                          l27 05F9  
                        l28 05FA                          l29 0600                          l53 062C  
                        l54 0640                          l55 0650                          l56 0664  
                        l57 0667                          u10 05EC                          u11 05EB  
                        u20 05F7                          u21 05F6                          u30 05FE  
                        u31 05FD                          u40 0605                          u41 0604  
                        u50 0672                          u51 0671                          u60 0684  
                        u61 0683                          u70 068A                          u71 0689  
                        u80 069C                          u81 069B                          u90 06A2  
                        u91 06A1                         l110 0696                         l104 0686  
                       l121 06EA                         l113 06B6                         l105 067E  
                       l130 0712                         l122 06E2                         l114 06AE  
                       l108 07FB                         l141 0766                         l133 0732  
                       l125 0702                         l117 06CE                         l109 069E  
                       l150 078E                         l142 075E                         l134 072A  
                       l126 06FA                         l118 06C6                         l161 07E2  
                       l153 07B2                         l145 077E                         l137 074E  
                       l129 071A                         l162 07DA                         l154 07AA  
                       l146 0776                         l138 0746                         l157 07CA  
                       l149 0796                         l166 07F2                         l158 07C2  
                       l174 05E6                         l800 06A2                         l802 06B4  
                       l820 0700                         l812 06D6                         l830 071E  
                       l814 06E8                         l806 06BA                         l832 0730  
                       l824 0706                         l808 06CC                         l770 05F7  
                       l930 0628                         l922 060A                         l850 077C  
                       l842 0752                         l826 0718                         l818 06EE  
                       l772 05FE                         l940 0643                         l924 0614  
                       l860 079E                         l844 0764                         l836 073A  
                       l774 0605                         l766 05E8                         l950 0651  
                       l942 0649                         l926 0617                         l862 07B0  
                       l854 0782                         l838 074C                         l790 0684  
                       l768 05EC                         l952 0657                         l944 064C  
                       l936 062D                         l928 0625                         l880 07F8  
                       l872 07CE                         l856 0794                         l848 076A  
                       l960 05E5                         l938 0633                         l874 07E0  
                       l866 07B6                         l794 068A                         l786 0668  
                       l954 05D2                         l884 07FA                         l868 07C8  
                       l796 069C                         l788 0672                         l956 05D7  
                       l878 07E6                         l958 05DF                         _RB0 0030  
                       _RB1 0031                         _RB2 0032                         _RB3 0033  
                       _RB4 0034                         _RB5 0035                         _RD2 0042  
                       _RB6 0036                         _RD3 0043                         _RB7 0037  
                       u100 06B4                         _RD4 0044                         u101 06B3  
                       _RD5 0045                         u110 06BA                         _RD6 0046  
                       u111 06B9                         _RD7 0047                         u200 0730  
                       u120 06CC                         u201 072F                         u121 06CB  
                       u210 073A                         u130 06D6                         u211 0739  
                       u131 06D5                         u300 07B0                         u220 074C  
                       u140 06E8                         u301 07AF                         u221 074B  
                       u141 06E7                         u310 07B6                         u230 0752  
                       u150 06EE                         u311 07B5                         u231 0751  
                       u151 06ED                         u320 07C8                         u240 0764  
                       u160 0700                         u400 05E5                         u321 07C7  
                       u241 0763                         u161 06FF                         u401 05E4  
                       u330 07CE                         u250 076A                         u170 0706  
                       u331 07CD                         u251 0769                         u171 0705  
                       u340 07E0                         u260 077C                         u180 0718  
                       u341 07DF                         u261 077B                         u181 0717  
                       u350 07E6                         u270 0782                         u190 071E  
                       u351 07E5                         u271 0781                         u191 071D  
                       u360 07F8                         u280 0794                         u361 07F7  
                       u281 0793                         u290 079E                         u291 079D  
                       u507 06DC                         u380 0640                         u381 063F  
                       u517 06F4                         u390 0664                         u391 0663  
                       u375 061A                         u607 07D4                         u527 070C  
                       u385 063C                         u617 07EC                         u537 0724  
                       u395 0660                         u547 0740                         u467 0678  
                       u557 0758                         u477 0690                         u567 0770  
                       u487 06A8                         u577 0788                         u497 06C0  
                       u587 07A4                         u597 07BC                        l1010 05C8  
                      l1006 05C0                        l1008 05C0                        _main 05C0  
                      btemp 007E                        start 0000          Lcd_Print_Char@i_67 0076  
        Lcd_Print_Char@data 0078                  _Lcd_SetBit 05E7                       ?_main 0070  
                     _PORTB 0006                       _TRISB 0086                       _TRISD 0088  
          ??_keypad_scanner 0070                       status 0003                       wtemp0 007E  
   __size_of_Lcd_Print_Char 005F             __initialization 07FC                __end_of_main 05D2  
                    ??_main 0079                 ?_Lcd_SetBit 0070     __end_of__initialization 07FC  
            __pcstackCOMMON 0070         __size_of_Lcd_SetBit 0022              _Lcd_Print_Char 0609  
                __pmaintext 05C0          Lcd_SetBit@data_bit 0070             Lcd_Print_Char@i 0074  
    __end_of_Lcd_Print_Char 0668                     __ptext1 05D2                     __ptext2 0668  
                   __ptext3 0609                     __ptext4 05E7                     main@key 0079  
      end_of_initialization 07FC             ?_Lcd_Print_Char 0070                ??_Lcd_SetBit 0070  
      switch_press_scan@key 0073          __end_of_Lcd_SetBit 0609     __size_of_keypad_scanner 0194  
       start_initialization 07FC  Lcd_Print_Char@Lower_Nibble 0072                   ___latbits 0002  
          ??_Lcd_Print_Char 0071              _keypad_scanner 0668           _switch_press_scan 05D2  
        ?_switch_press_scan 0070         ??_switch_press_scan 0073      __end_of_keypad_scanner 07FC  
 __end_of_switch_press_scan 05E7             ?_keypad_scanner 0070               __size_of_main 0012  
Lcd_Print_Char@Upper_Nibble 0073  __size_of_switch_press_scan 0015                  _OPTION_REG 0081  
